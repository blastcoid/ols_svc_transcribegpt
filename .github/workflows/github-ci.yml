name: Docker Push
on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*'
env:
  SERVICE_NAME: ols-svc-transcribegpt
  DOCKER_REGISTRY: ${{ secrets.DOCKER_USERNAME }}
  HELM_REPO_SSH: git@github.com:blastcoid/ols_helm.git
  HELM_PATH_DEV: charts/incubator/ols_svc_transcribegpt
  HELM_PATH_STG: charts/test/ols_svc_transcribegpt
  HELM_PATH_PRD: charts/stable/ols_svc_transcribegpt
jobs:
  docker:
    environment: ols_svc_transcribegpt_dev
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Set Image Tag
        run: |
          if [[ $GITHUB_REF == refs/heads/dev ]]; then
            echo "IMAGE_TAG_LATEST=alpha-latest" >> $GITHUB_ENV
            echo "IMAGE_TAG_SHA=alpha-$(echo ${{ github.sha }} | tail -c 9)" >> $GITHUB_ENV
            echo "CHART_PATH=${{ env.HELM_PATH_DEV }}" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            echo "IMAGE_TAG_LATEST=beta-latest" >> $GITHUB_ENV
            echo "IMAGE_TAG_SHA=beta-$(echo ${{ github.sha }} | tail -c 9)" >> $GITHUB_ENV
            echo "CHART_PATH=${{ env.HELM_PATH_STG }}" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "IMAGE_TAG_LATEST=latest" >> $GITHUB_ENV
            echo "IMAGE_TAG_SHA=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
            echo "CHART_PATH=${{ env.HELM_PATH_PRD }}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=no_build" >> $GITHUB_ENV
            echo "CHART_PATH=no_build" >> $GITHUB_ENV
            echo "IMAGE_TAG_SHA=no_build" >> $GITHUB_ENV
          fi

      - name: Build and Push
        if: (env.IMAGE_TAG_LATEST != 'no_build' || env.IMAGE_TAG_LATEST != 'no_build') && !startsWith(env.IMAGE_TAG_SHA, 'v')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.IMAGE_TAG_SHA }}, ${{ env.DOCKER_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.IMAGE_TAG_LATEST }}
          platforms: linux/amd64
          # args: --no-cache

      - name: Retag and Push for Release
        if: startsWith(env.IMAGE_TAG, 'v')
        run: |
          docker pull ${{ env.DOCKER_REGISTRY }}/${{ env.SERVICE_NAME }}:beta-latest
          docker tag ${{ env.DOCKER_REGISTRY }}/${{ env.SERVICE_NAME }}:beta-latest ${{ env.DOCKER_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.IMAGE_TAG_SHA }}
          docker tag ${{ env.DOCKER_REGISTRY }}/${{ env.SERVICE_NAME }}:beta-latest ${{ env.DOCKER_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.IMAGE_TAG_LATEST }}
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.IMAGE_TAG_SHA }}
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.IMAGE_TAG_LATEST }}

      - name: Update Helm Chart
        if: env.CHART_PATH != 'no_update'
        run: |
          eval "$(ssh-agent -s)"
          echo "${{ secrets.GIT_SSH_PRIVATE_KEY }}" > id_rsa
          chmod 400 id_rsa
          ssh-add id_rsa
          ssh-add -l
          git clone ${{ env.HELM_REPO_SSH }}
          cd ols_helm/${{ env.CHART_PATH }}
          sed -i "s|tag: .*|tag: ${{ env.IMAGE_TAG_SHA }}|" values.yaml
          git add .
          git config --global user.email "imam@blast.co.id"
          git config --global user.name "imam"
          git commit -m "Update image tag to ${{ env.IMAGE_TAG_SHA }}"
          git push origin main